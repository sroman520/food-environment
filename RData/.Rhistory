mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip(expand = FALSE) +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.line.y.left = element_line(color = "black", size = 1),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
ggsave("stores_barplot.png", width = 14, height = 7)
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.line.y.left = element_line(color = "black", size = 1),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.line.y.left = element_line(color = "black", size = 1),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.line.y.left = element_line(color = "black", size = 1),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
ggsave("stores_barplot.png", width = 14, height = 7)
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
ggsave("stores_barplot.png", width = 14, height = 7)
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
geom_hline = (yintercept = 0) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
geom_hline = (yintercept = 0, linetype = "solid") +
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
ggsave("stores_barplot.png", width = 14, height = 7)
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
geom_vline(xintercept = 0) +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
ggsave("stores_barplot.png", width = 14, height = 7)
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
geom_hline(yintercept = 0) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
ggsave("stores_barplot.png", width = 14, height = 7)
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
geom_hline(yintercept = 0, size = 2) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
ggsave("stores_barplot.png", width = 14, height = 7)
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
geom_hline(yintercept = 0, size = 1) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
ggsave("stores_barplot.png", width = 14, height = 7)
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
geom_hline(yintercept = 0, size = 1) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9", size = 1),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
ggsave("stores_barplot.png", width = 14, height = 7)
# merge with stores and graph - barplot
data %>%
filter(Variable_Code == "GROCPTH16" |
Variable_Code == "CONVSPTH16" |
Variable_Code == "FFRPTH16") %>%
merge(data.pov, by = "FIPS") %>%
group_by(PERPOV10, Variable_Code) %>%
summarize(Avg_Stores = mean(Value * 10), # multiply by 10 to get per 100
SE_Stores = sd(Value * 10) / sqrt(length(Value))) %>%
mutate(Store = ifelse(Variable_Code == "GROCPTH16", "Grocery stores",
ifelse(Variable_Code == "CONVSPTH16", "Convenience stores",
ifelse(Variable_Code == "FFRPTH16", "Fast food restaurants", "")))) %>%
ggplot(mapping = aes(x = Store, fill = PERPOV10, y = Avg_Stores)) +
geom_bar(position = "dodge", stat = "identity") +
geom_errorbar(mapping = aes(x = Store,
ymin = Avg_Stores - SE_Stores,
ymax = Avg_Stores + SE_Stores),
width = 0.4, alpha = 0.9, position = position_dodge(0.9)) +
geom_hline(yintercept = 0, size = 1) +
scale_y_continuous(limits = c(0, 8)) +
coord_flip() +
scale_fill_discrete(breaks = c("Persistant poverty", "Not persistant poverty")) +
labs(title = "Something catchy",
subtitle ="Store availability by county, 2016\n",
x = "",
y = "\nStores per 100 people",
fill = "County poverty") +
theme(panel.background = element_blank(),
line = element_blank(),
panel.grid.major.x = element_line(color = "#d9d9d9"),
axis.text = element_text(size = 16),
axis.text.y = element_text(margin = margin(r = 0)),
axis.title = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 18),
legend.position = "top",
legend.title= element_blank(),
legend.text = element_text(size = 16))
ggsave("stores_barplot.png", width = 14, height = 7)
